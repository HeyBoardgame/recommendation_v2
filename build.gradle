plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.yeoboge'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    all {
        exclude group : 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }

    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

ext {
    springVersion = '3.3.2'
    querydslVersion = '5.0.0'
}

dependencies {
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-log4j2:${springVersion}"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${springVersion}"

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main {
        java {
            srcDirs += [ querydslDir ]
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.querydsl
    options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file(querydslDir)
}
